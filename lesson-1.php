<?php

  /*
  Задание 1: разместить строчки кода ниже и вызвать в браузере ваш первый php-скрипт:
  echo "Hello world!";
  */
  echo "Hello world!";
  echo "<br/>";



  /*
  Задание 2: Повторить весь код из роликов раздела "Материалы на обучение"
  */
  //Изучение PHP для начинающих | Урок #3 - Пишем "Hello World!"
  echo "Hello world!"; //выводит на экран текст
  echo "<br/>";



  //Изучение PHP для начинающих | Урок #4 - Комментарии в PHP
  echo "Hi";//эта строчка выводит Hi!
  echo "<br/>"; 
  /*
  Комментарий 1
  Комментарий 3         //способы ввода комментариев
  Комментарий 3
  */
  # Комментарий 4



  //Изучение PHP для начинающих | Урок #5 - Переменные и их типы
  $myNumber = 5; //переменная number со значением 5
  $myNumber = 7; //поменяли значение переменной
  $float = -3.25; //переменная с плавающей точкой
  $string = "Hello World"; //строковая переменная
  $bool = true; //булевая переменная

  echo "Переменная myNumber = $myNumber"; //вывод на экран текста и значения переменной
  echo "<br/>";
  echo "Переменная float = $float";//вывод на экран текста и значения переменной с плавающей точкой
  echo "<br/>";
  echo "Переменная string = $string";//вывод на экран текста и значения строковой переменной
  echo "<br/>";
  echo "Переменная bool = $bool";//вывод на экран текста и значения булевой переменной
  echo "<br/>";



  //Изучение PHP для начинающих | Урок #6 - Константы
  echo PHP_VERSION; //узнать версию PHP
  define("PI", 3.14); // ввод константы
  echo "<br/>";
  echo PI; //Вывод константы
  echo "<br/>";
  echo defined("PI"); //Проверка на наличие константы с таким именем
  echo "<br/>";



  //Изучение PHP для начинающих | Урок #7 - Арифметические операции
  $x =32; //ввод переменной
  $y = 22.13; //ввод переменной
  $summ = $x + $y; //сложение переменных
  $diff = $x - $y; //вычитание переменных
  $mult = $x * $y; //умножение переменных
  $div = $x / $y; //деление переменных
  $z = 12;
  $ost = $x % $z; //остаток при делении


  echo "Сумма из $x и $y = $summ"; //вывод на экран суммы
  echo "<br/>";
  echo "Разница $x и $y = $diff"; //вывод на экран разницы
  echo "<br/>";
  echo "Умножение $x и $y = $mult"; //вывод на экран умножения
  echo "<br/>";
  echo "Деление $x и $y = $div"; //вывод на экран деления
  echo "<br/>";
  echo "Остаток при делении $x и $z = $ost"; //вывод на экран остатка
  echo "<br/>";

  $q = 400; //ввод переменной
  $q = $q + 10; //добавление к переменной 10
  $q += 10; //добавление к переменной 10 другим способом
  $q -= 10; //вычитание из переменной
  $q *= 10; //умножение переменной на 10
  $q /= 10; //деление переменной на 10
  $q++; //прибавление единицы
  $q--; //вычитание единицы
  echo $q;
  echo "<br/>"; 



  //Изучение PHP для начинающих | Урок #8 - Строковые операции
  $str_1 = "Первая строка";
  $str_2 = "Вторая строка";
  echo $str_1;
  echo $str_2;
  echo "<br/>";
  echo $str_1 . $str_2; //объединение строчек
  echo "<br/>";
  echo $str_1 . " " . $str_2; //объединение строчек
  echo "<br/>";



  //Изучение PHP для начинающих | Урок #9 - Логические операции
  $x = 12;
  $y = 34;
  $z = 4.25;

  $bool_1 = $x == $z; //проверка на равенство переменных, если true, то выводится 1, если нет 0.
  echo $bool_1;
  echo "<br/>";
  $bool_1 = $x != $z; //проверка на равенство переменных
  echo $bool_1;
  echo "<br/>";
  $bool_2 = $x > $z; //проверка на равенство переменных
  echo $bool_2;
  echo "<br/>";


  $bool_3 = !($x == $y); //логическое НЕ(!)
  echo $bool_3;
  echo "<br/>";
  $bool_4 = ($x == $y) || ($z < $y); //логическое ИЛИ(||)
  echo $bool_4;
  echo "<br/>";
  $bool_5 = $x == $y && $z < $y; //логическое И(&&)
  echo $bool_5;
  echo "<br/>";
  $bool_5 = $z != $x ^ $y < $z; //логическое исключающая или(^)
  echo $bool_5;
  echo "<br/>";
  $bool = ($x != $y && $z < $x) || $x == $y;
  echo $bool;
  echo "<br/>";



  //Изучение PHP для начинающих | Урок #10 - Оператор эквивалентности
  $string = "Example";
  $num = 0;
  $bool_1 = $string == true;
  echo "$bool_1 = $string == true";
  echo "<br/>";
  $bool_2 = $num == false;
  echo "$bool_2 = $num == false";
  echo "<br/>";
  $bool_3 = $string === true;
  echo "$bool_3 = $string === true"; //оператор эквивалентности, проверяет типы переменных
  echo "<br/>";
  $bool_4 = $num === false;
  echo "$bool_4 = $num === false"; //оператор эквивалентности
  echo "<br/>";



  //Изучение PHP для начинающих | Урок #11 - Условные операторы
  $x = 10;
  $y = 11;
  if ($x == $y) {       //если х и у равны, то выполняется условие
    echo "Все сработало";
  }
  elseif ($x == 10 ) {//если х равен 10, то выполняется условие
    $num = 5;
    echo "Число №".$num;
  }
  else {                  //если ни одно условие не выполняется, то следует это
    echo "Не работает";
  }
  echo "<br/>";
  $x == $y ? $string = "Да" : $string = "Нет";//если х и у равны, то выводится Да, иначе выводится Нет
  echo $string;
  echo "<br/>";



  //Изучение PHP для начинающих | Урок #13 - Циклы For, While и Do While
  for ($i = 100; $i >= 80; $i -= 2) {     //цикл будет выполнятся, вычитая каждый цикл 2 из 100, пока i будет больше 80
    if($i % 5 == 0) continue;          //пропускаются значения делящиеся на 5 без остатка
    if($i <= 87) break;                //цикл заканчивается при <=87
    echo "Цикл под номером № $i <br/>";
  }
  echo "<br/>";
  $x = 0;
  while ($x <= 10) {          //цикл выполняется до 10
    if ($x == 7)              //когда доходит до 7 выполняется другой цикл
      for ($y = 0; $y < 5; $y += 3)
        echo "Ещее одна итерация - $y<br/>";
    echo "Итерация под номером № $x<br/>";
    $x++;
  }
  echo "<br/>";
  $z = 10;
  do {            //цикл проверяется после выполнения
    echo "Операция выполнилась один раз";
    $z++;
  } while ($z < 5);


  /*
  Задание 3: Задачи на написания линейных алгоритмов. Необходимо сделать/нарисовать сначала блок-схему, затем воспроизвести блок-схему в коде на php.
  3a. Посчитать и вывести на экран чему равен периметр четырехугольника. Дано сторона a=5, сторона b=3, сторона c=5, сторона d=11.
  */
  echo "<br/>";

  $a = 5;
  $b = 3;
  $c = 5;
  $d = 11;
  $P = $a + $b + $c + $d;
  echo "Периметр считается по формуле P = a + b + c + d = $P";

  echo "<br/>";
  /*
  3b. посчитать и вывести на экран значение S. Дано S = (a + b)^2, a = 7x, b=21x, x = ½
  */
  echo "<br/>";

  $x = 0.5;
  $a = 7*$x;
  $b = 21*$x;
  $S = ($a + $b) * ($a + $b);
  echo "S = (a + b)^2 = $S";

  echo "<br/>";
  /*
  Задание 4: Задачи на написание вариативных алгоритмов (if...else)
  4a. Посчитать площадь трапеции если переменная $Why заданная пользователем в начале сценария истина и периметр трапеции если эта переменная ложь. Значения необходимые для расчета площади и периметра задайте самостоятельно.
  */
  echo "<br/>";

  $Why=true;
  $a=10;
  $b=15;
  $h=12;
  $c=12.258;
  $d=12.258;

  $h2=sqrt(pow($c, 2) - pow(($b-$a)*0.5, 2));


  if ($Why==true) {
    $S=($a + $b)*0.5*12;
    echo "Площадь трапеции $S";
  }
  else {
    $P = $a + $b + $c + $d;
    echo "Периметр трапеции $P";
  }

  echo "<br/>";
  /*
  4b. Доработать предыдущую задачу добавив проверку корректности вводимых данных пользователем. Если данные введены некорректно, то сообщить об этом и не производить расчеты.
  Подсказка: для проверки корректности вводимых данных, рекомендуется сравнить введенное значение и вычисленное значение высоты.
  */
  echo "<br/>";
  $a=10;
  $b=15;
  $h=12;
  $c=12.258;
  $d=12.258;

  $h2=sqrt(pow($c, 2) - pow(($b-$a)*0.5, 2));

  if ($h!=round($h2))
    echo "Данные введены некорректно";
  else {
    if ($Why==true) {
      $S=($a + $b)*0.5*12;
      echo "Площадь трапеции $S";
    }
    else {
      $P = $a + $b + $c + $d;
      echo "Периметр трапеции $P";
    }
  }
  echo "<br/>";


  /*
  Задание 5: Задачи на написание алгоритмов с циклами (for, while)
  5a. В задаче будем использовать функцию rand() она из заданного диапазона значений выбирает одно случайное.
  Необходимо определить пессимист компьютер или оптимист.
  Пусть $computer = rand(0,1). Если $computer выбирает 0, то он пессимист, если выбирает 1, то он оптимист.
  Выполнить опрос компьютера 100 раз и вывести на экран по итогу всех этих итераций вывод - пессимист этот компьютер сегодня/сейчас или оптимист.
  Подсказка: не нужно выводить 100 раз пессимист/оптимист, а нужен итог с цифрами, типа на 55% оптимист.
  */
  echo "<br/>";
  $opt=0;
  $pes=0;
  for ($i=0; $i <= 99; $i += 1) {
    $computer=rand(0,1);
    if ($computer == 1) {
      $opt=$opt+1;
    }
    else {
      $pes=$pes+1;
    }
  }
  if ($opt > $pes) {
    echo "Компьютер оптимист на $opt% <br/>";
  }
  else if ($opt < $pes) {
    echo "Компьютер пессимист на $pes% <br/>";
  }
  else {
    echo "Компьютер оптимист/пессимист на 50/50 <br/>";
  }
  

  



  /*
  5b. В переменной $password хранится шестизначный пароль, состоящий только из цифр, например 302390.
  Необходимо написать программу которая методом перебора найдет пароль.
  Подсказка: 012345 - тоже вариант пароля.
  */
  echo "<br/>";
  $password='302390';
  
  for ($password = 000000; $password <= 999999; $password++) {
    if ($password=302390){
      echo "Пароль найден $password";
    } break;
    
  }
  echo "<br/>";



  /*
  5c. В переменных $pass1 и $pass2 хранятся трехзначные пароли.
  Мы уже подобрали пароль $pass1, например он равен 436.
  Пароль $pass2 удалось получить только в зашифрованном виде $pass2Se.
  Мы узнали что шифр был сделан по следующему правилу - если "вторая цифра из $pass1" больше 5, 
  то $pass2 = "цифра первого разряда из $pass2Se" . "число второго разряда из $pass2Se" . "число третьего разряда из $pass2Se", 
  а если "второе число из $pass1" меньше либо равно 5, то $pass2 = "цифра второго разряда из $pass2Se" . "цифра третьего разряда из $pass2Se" . "цифра первого разряда из $pass2Se".
  Вывести на экран $pass2 и описание правила по которому этот пароль был расшифрован из $pass2Se.
  Значение для переменной $pass2Se задайте на своё усмотрение.
  */
  echo "<br/>";
    
  $pass1="436";
  $pass2;
  $pass2se="256";

  $sekpass1=($pass1[1]);
  $fpass1=($pass2se[0]);
  $spass1=($pass2se[1]);
  $tpass1=($pass2se[2]);

  if ($sekpass1 <= 5) {
    echo "pass2=$spass1$fpass1$tpass1";
  }
  else {
    echo "pass2=$tpass1$spass1$fpass1";
  }

  echo "<br/>";


  /*
  5d. Для предыдущей задачи написать алгоритм шифрования пароля $pass2
  */
  echo "<br/>";

  $pass2="512";
  $pass2se;
  $fpass2=($pass2[0]);
  $spass2=($pass2[1]);
  $tpass2=($pass2[2]);
  if ($sekpass1 <= 5) {
    echo "pass2se=$spass2$fpass2$tpass2";
  }
  else {
    echo "pass2se=$tpass2$spass2$fpass2";
  }
    

  echo "<br/>";


  /*
  Задание 6: Задачи на выбор типов данных
  6a. Даны два одноразрядных числа заданных с помощью слов (например $a='семь' и b='четыре').
  Вывести на экран, в виде числа, результат сложения этих цифр.
  Проверить результат сложения на разрядность, если разрядность больше 1, то вывести сообщение "большое число", иначе вывести сообщение "маленькое число".
  */
  echo "<br/>";

  $a="пять";
  $b="ноль";
    
  if ($a=="девять") {
    $a=9;
  }
  else if ($a=="восемь") {$a=8;}
  else if ($a=="семь") {$a=7;}
  else if ($a=="пять") {$a=5;}
  else if ($a=="четыре") {$a=4;}
  else if ($a=="три") {$a=3;}
  else if ($a=="два") {$a=2;}
  else if ($a=="один") {$a=1;}
  else if ($a=="ноль") {$a=0;}

  if ($b=="девять"){$b=9;}
  else if ($b=="восемь"){$b=8;}
  
  else if ($b=="семь"){$b=7;} 
  
  else if ($b=="шесть"){$b=6;}
  
  else if ($b=="пять"){$b=5;}
  
  else if ($b=="четыре"){$b=4;}
  
  else if ($b=="три"){$b=3;}
  
  else if ($b=="два"){$b=2;}
 
  else if ($b=="один"){$b=1;}
  
  else if ($b=="ноль") {$b=0;}

  $s=$a+$b;

  if ($s>9){
    echo "$s-большое число";
  }
  else {
    echo "$s-маленькое число";
  }
  echo "<br/>";
  /*
  6b. Предположим у нас в программе цены хранятся в виде целых чисел, но фактически - два последних разряда числа обозначают копейки.
  Например, цена товара хранится в виде 10050, это значит что товар стоит 100 рублей 50 копеек.
  Написать программу которая выведет на экран цену в двух форматах "N рубл[ей/я] M копе[ек/ки]." и "N.M руб." увеличив при этом цену товара на 13 процентов.
  В программе использовать оператор % ($a % $b - целочисленный остаток от деления $a на $b).
  */
 


  echo "<br/>";
  echo "<br/>";
  $num=10650;
  $number = $num * 1.13;
  $cop = $number % 100;
  $price = $number / 100;

  $rub = intval($price);
  $r=$rub%10;
  echo "<br/>";
  if ($r==2 || $r==3 || $r==4) {
    $r='рубля';
  }
  else if ($r==1) {
    $r='рубль';
  }
  else {$r='рублей';
  }
  
  $c=$cop%10;

  if ($c==2 || $c==3 || $c==4 ) {
    $c='копейки';
  }
  else if ($c==1) {
    $c='копейка';
  }
  else {$c='копеек';
  }

  echo "$rub $r $cop $c";
  echo "<br/>";
  echo "$rub.$cop руб.";

  echo "<br/>";
  /*
  6c. Как известно, при переводе IP-адреса компьютера в число, мы экономим ресурсы памяти, так как IP-адрес в четвертой версии — это 32-х битовое число и запись в строчном виде 192.168.1.1 будет занимать 15 байт, а в числовом виде всего 4 байта.
  При этом удобной формой записи является запись в виде четырёх десятичных чисел значением от 0 до 255, разделённых точками, например, 192.0.2.60. но для хранения его в базе данных лучше перевести его в десятичное целое число.
  Например 192.168.1.1 — это одно и то же, что 3232235777.
  Алгоритм перевода строковой записи IP4 в числовую такой X = Y1 * 256 ^ 0 + Y2 * 256 ^ 1 + Y3 * 256 ^ 2 + Y4 * 256 ^3 (где ip адрес имеет формат Y4.Y3.Y2.Y1) Написать перевести алгоритм в php-код.
  Пользователь программы вводит на входе $IP = '123.123.123.123' или $IP = 3232235777, программа должна определить какого вида IP ввел пользователь и показать альтернативную запись.
  Для обработки адреса с "точкой" использовать функцию substr() - возвращает подстроку строки string длиной length, начинающегося с start символа по счету)
  */
  echo "<br/>";
    
  $IP = '192.168.1.1';

  if (is_int($IP)==integer) {
    $Y4[0]=(int)($IP/256/256/256);
    $Y3[1]=(int)(($IP-$Y4[0]*256*256*256)/256/256);
    $Y2[2]=(int)(($IP-$Y4[0]*256*256*256-$Y3[1]*256*256)/256);
    $Y1[3]=$IP-$Y4[0]*256*256*256-$Y3[1]*256*256-$Y2[2]*256;
    $IP4 = "$Y4[0].$Y3[1].$Y2[2].$Y1[3]";
    echo "Введен IP в виде=$IP <br/> Обратная запись = $IP4";
  }
  else {
    $a=explode(".",$IP);
    $intip = $a[0]*256*256*256+$a[1]*256*256+$a[2]*256+$a[3];
    echo "Введен IP в виде = $IP <br/> Обратная запись = $intip";
    
    
  }

?>